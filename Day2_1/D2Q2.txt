Question 2: Explain with examples the remaining methods of String and Array

Remaining Methods of String:-

search():- The search() method searches a string for a specified value and returns the position of the match:
var str = "Please locate where 'locate' occurs!";
var pos = str.search("locate");

substring():- extracts a part of a string and returns the extracted part in a new string. substring() cannot accept negative indexes.
var str = "Apple, Banana, Kiwi";
var res = str.substring(7, 13);
o/p:-Banana

substr():-substr() is similar to slice(). The difference is that the second parameter specifies the length of the extracted part.
var str = "Apple, Banana, Kiwi";
var res = str.substr(7, 6);
O/p-Banana

replace():-The replace() method replaces a specified value with another value in a string
str = "Please visit Microsoft!";
var n = str.replace("Microsoft", "Store");

trim():-The trim() method removes whitespace from both sides of a string:
var str = "       Hello World!        ";
alert(str.trim());

charCodeAt():- The charCodeAt() method returns the unicode of the character at a specified index in a string:
var str = "HELLO WORLD";
str.charCodeAt(0);   // returns 72
-------------------------------------------------------------------------------------------------------------------------------------------------
Remaining Array Methods:-

toString():- The JavaScript method toString() converts an array to a string of (comma separated) array values.
var fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits.toString();
O/P-Banana,Orange,Apple,Mango


join():- The join() method also joins all array elements into a string.
It behaves just like toString(), but in addition you can specify the separator:

var fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits.join(" * ");
O/P-Banana * Orange * Apple * Mango


pop():- The pop() method removes the last element from an array:
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.pop(); 

shift():- Shifting is equivalent to popping, working on the first element instead of the last.
The shift() method removes the first array element and "shifts" all other elements to a lower index.

var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.shift();  // Removes the first element "Banana" from fruits

delete:- Since JavaScript arrays are objects, elements can be deleted by using the JavaScript operator delete:
var fruits = ["Banana", "Orange", "Apple", "Mango"];
delete fruits[0];           // Changes the first element in fruits to undefined










